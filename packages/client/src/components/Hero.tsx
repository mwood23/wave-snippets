import React, { FC, useState } from 'react'
import { animated, useSpring } from 'react-spring'

import { useSnippetState } from '../context'
import { backgroundColorToHex } from '../utils'
import { Box, Flex, Text } from './core'

type HeroProps = {}

const AnimFeTurbulence = animated('feTurbulence')
const AnimFeDisplacementMap = animated('feDisplacementMap')

export const Hero: FC<HeroProps> = () => {
  const [open, toggle] = useState(false)
  const { backgroundColor } = useSnippetState()

  const { freq, scale, transform, opacity } = useSpring({
    reverse: open,
    from: {
      scale: 10,
      opacity: 0,
      transform: 'scale(0.8)',
      freq: '0.0125, 0.0',
    },
    to: { scale: 150, opacity: 1, transform: 'scale(0.9)', freq: '0.0, 0.0' },
    config: { duration: 3000 },
  })

  return (
    <Flex alignItems="center" direction="column">
      <animated.svg
        onClick={() => toggle(!open)}
        style={{ transform, opacity, margin: '1rem auto', cursor: 'pointer' }}
        viewBox="0 0 1278 446"
        width="250px"
      >
        <defs>
          <filter id="water">
            <AnimFeTurbulence
              baseFrequency={freq}
              numOctaves={1.5}
              result="TURB"
              seed="8"
              type="fractalNoise"
            />
            <AnimFeDisplacementMap
              in="SourceGraphic"
              in2="TURB"
              result="DISP"
              scale={scale}
              xChannelSelector="R"
              yChannelSelector="G"
            />
          </filter>
        </defs>
        <g filter="url(#water)">
          <animated.path
            d="M282.84 438.318h-67.547l-17.395-150.232-23.721-189.4965h-1.355L131.254 438.318H64.6105L0 8.96267h61.8995L88.1052 198.886c3.9158 31.583 8.1328 78.673 12.6508 141.269h1.356c.451-21.055 3.915-62.881 10.392-125.477L140.516 8.96267h68.226L235.399 214.678c6.325 57.475 9.789 99.3 10.392 125.477h1.129c1.205-15.649 3.389-40.119 6.552-73.409 3.163-33.574 5.422-56.194 6.777-67.86L287.584 8.96267h60.77L282.84 438.318zM572.718 438.318h-43.375l-11.973-58.471h-1.582c-10.542 25.039-21.311 42.395-32.305 52.069C472.489 441.305 458.106 446 440.334 446c-21.989 0-39.233-11.808-51.734-35.424-12.5-23.9-18.75-57.902-18.75-102.004 0-44.102 8.283-77.107 24.85-99.016 16.717-21.909 42.321-34.001 76.81-36.277l39.534-2.134v-18.779c0-43.533-11.823-65.2999-35.468-65.2999-17.922 0-39.233 10.243-63.933 30.7289l-20.558-78.9567C417.14 12.9461 445.831 0 477.157 0c31.477 0 55.273 12.8038 71.388 38.4115 16.115 25.3231 24.173 63.3075 24.173 113.9545v285.952zm-61.674-163.462v-35.424l-23.946 1.28c-18.224 1.138-31.703 7.398-40.439 18.779-8.735 11.097-13.102 28.168-13.102 51.215 0 33.006 10.015 49.508 30.046 49.508 14.458 0 25.98-7.682 34.564-23.047 8.585-15.649 12.877-36.419 12.877-62.311zM754.039 438.318h-63.707L603.809 8.96267h64.836L712.472 253.516c5.12 31.867 8.208 61.174 9.262 87.919h1.13c.602-23.9 3.689-53.207 9.262-87.919L775.727 8.96267h64.836L754.039 438.318zM1010.65 174.986c-.15-28.738-4.07-51.073-11.75-67.007-7.681-15.9337-18.149-23.9005-31.402-23.9005-13.103 0-23.419 7.9668-30.95 23.9005-7.53 15.649-11.822 37.985-12.877 67.007h86.979zm45.4 240.712C1034.67 435.899 1008.01 446 976.083 446c-36.598 0-65.213-18.921-85.846-56.764-20.483-38.127-30.724-92.756-30.724-163.889 0-71.132 9.488-126.3307 28.464-165.5958C907.255 20.4862 933.235.8536 965.917.8536c32.832 0 58.213 17.3563 76.133 52.0689 17.92 34.7126 26.88 82.3715 26.88 142.9765v56.763H922.316c.602 33.575 5.798 59.751 15.588 78.53 9.94 18.495 23.645 27.742 41.115 27.742 26.051 0 51.731-11.239 77.031-33.717v90.481zM1253.83 215.531c16.11 23.047 24.17 55.768 24.17 98.163 0 42.395-8.13 75.116-24.4 98.162-16.26 22.763-39.68 34.144-70.26 34.144-30.42 0-56.17-8.251-77.26-24.754v-96.882c11.6 10.243 24.55 18.779 38.86 25.607 14.46 6.829 27.18 10.243 38.18 10.243 22.44 0 33.66-12.234 33.66-36.704 0-12.235-3.01-22.193-9.04-29.876-6.02-7.682-18.6-19.348-37.73-34.997-18.97-15.649-32.68-29.306-41.11-40.972-8.13-11.95-14.08-25.465-17.85-40.545-3.61-15.365-5.42-34.144-5.42-56.337 0-38.1272 7.83-67.576 23.49-88.3466 15.67-21.0552 37.51-31.5828 65.52-31.5828 28.16 0 55.12 11.2389 80.87 33.7168l-18.75 84.5056c-13.1-10.528-24.39-18.353-33.88-23.4741-9.34-5.406-18.75-8.1091-28.24-8.1091-18.38 0-27.56 9.3895-27.56 28.1682 0 10.528 3.09 19.775 9.26 27.742 6.17 7.967 18.45 18.921 36.82 32.863 18.53 13.942 32.08 27.03 40.67 39.265z"
            fill={backgroundColorToHex(backgroundColor)}
          />
        </g>
      </animated.svg>
      <Box marginBottom="8">
        <Text fontSize="xl" fontWeight="500" textAlign="center">
          Create gorgeous GIFs of your code to share with the world.
        </Text>
        <Text fontSize="xl" fontWeight="500" textAlign="center">
          Start adding snippets to start.
        </Text>
      </Box>
    </Flex>
  )
}
